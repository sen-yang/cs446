Drop table rankingsdata;
Drop table users;


  CREATE TABLE public.users
  (
      UID serial UNIQUE NOT NULL,
      username character varying(12) NOT NULL,
      hashpassword character varying(64) NOT NULL,
      email character varying(50) NOT NULL,
      characterSprite character varying(60),
      SessionID character varying(60) UNIQUE,
      PRIMARY KEY (UID, username)
  );

  CREATE TABLE public.rankingsdata
  (
      UID serial UNIQUE,
      rank integer,
      tau double precision,
      rating double precision,
      ratingdev double precision,
      volatility double precision,
      PRIMARY KEY(UID),
  	constraint users_Rank
  	foreign key (UID)
  	REFERENCES public.users (UID)
  );

  INSERT INTO public.users(
    username, hashpassword, email, characterSprite)
  	VALUES ( 'user1', 'password', '', 'characterSprite1');
   INSERT INTO public.users(
   username, hashpassword, email, characterSprite)
  	VALUES ( 'user2', 'password', '', 'characterSprite2');
  	INSERT INTO public.users(
   username, hashpassword, email, characterSprite)
  	VALUES ( 'user3', 'password', '', 'characterSprite3');
    INSERT INTO public.users(
    username, hashpassword, email, characterSprite)
    VALUES ( 'user4', 'password', '', 'characterSprite3');


    INSERT INTO public.rankingsdata(
  	UID, tau, rating, ratingdev, volatility)
  	VALUES (1,0.5, 1500, 200, 0.06);

  	INSERT INTO public.rankingsdata(
  	UID, tau, rating, ratingdev, volatility)
    VALUES (2,0.5, 1500, 200, 0.06);

  	INSERT INTO public.rankingsdata(
  	UID, tau, rating, ratingdev, volatility)
    VALUES (3,0.5, 1500, 200, 0.06);

  	INSERT INTO public.rankingsdata(
  	UID, tau, rating, ratingdev, volatility)
    VALUES (4,0.5, 1500, 200, 0.06);

    create view seeRanks AS (select username,rating as rankRating, rank() over(order by rating desc) as rank from users u1,rankingsdata rd1 where u1.UID=rd1.UID);
